# Workflow: تحديث صور إحصاءات GitHub تلقائياً
name: Update GitHub Stats Images (SVG Only)

# إعطاء صلاحية الكتابة للملفات (مهم لعملية الـ commit)
permissions:
  contents: write

on:
  workflow_dispatch: # تشغيل يدوي
  schedule:
    - cron: '0 */6 * * *' # كل 6 ساعات

jobs:
  update-stats:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Make assets dir
        run: mkdir -p assets
        
      # إعداد متغيرات البيئة لكسر الكاش
      - name: Setup Cache Bust
        run: |
          echo "TIMESTAMP=$(date +%s)" >> $GITHUB_ENV

      # -----------------------------------------------
      # 0. تشخيص الوصول للمستودع الخاص (الخطوة الجديدة)
      # -----------------------------------------------
      - name: Test Private Repo Access (Diagnosis)
        env:
          GH_TOKEN: ${{ secrets.GH_STATS_TOKEN }}
        run: |
          REPO_NAME="Palm-tree-classification"
          # استخدام GitHub API مباشرة للتحقق من الـ Token عبر HTTP Status Code
          HTTP_CODE=$(curl -s -o /dev/null -w "%{http_code}" -H "Authorization: token ${GH_TOKEN}" "https://api.github.com/repos/${{ github.repository_owner }}/${REPO_NAME}")
          
          echo "Status Code for Private Repo Access: $HTTP_CODE"

          if [ "$HTTP_CODE" -eq 200 ] || [ "$HTTP_CODE" -eq 302 ]; then
            echo "Private repo access SUCCESS! The token is valid and can see your private repo."
          else
            echo "::error::Private repo access FAILED! Status: $HTTP_CODE. The GH_TOKEN MUST have the 'repo' scope."
            exit 1 # فشل سير العمل إذا كان الـ Token لا يعمل
          fi
          
      # -----------------------------------------------
      # 1. بطاقة إحصاءات المستخدم
      # -----------------------------------------------
      - name: Download GitHub Stats image
        env:
          GH_TOKEN: ${{ secrets.GH_STATS_TOKEN }}
        run: |
          curl -sS -f "https://github-readme-stats.vercel.app/api?username=renqwee&show_icons=true&hide=stars&theme=dark&count_private=true&access_token=${GH_TOKEN}&line_height=30&card_width=500&cache_bust=${TIMESTAMP}" -o assets/github-stats.svg

      # -----------------------------------------------
      # 2. بطاقة اللغات (فرض الظهور باستخدام القائمة)
      # -----------------------------------------------
      - name: Download Top Languages (Force List)
        env:
          GH_TOKEN: ${{ secrets.GH_STATS_TOKEN }}
        run: |
          # نستخدم langs_list لفرض ظهور هذه اللغات حتى لو كانت نسبتها صغيرة
          LANGS_LIST="Python,JavaScript,HTML,CSS,Shell,TypeScript,Vue"
          
          curl -sS -f "https://github-readme-stats.vercel.app/api/top-langs/?username=renqwee&theme=dark&count_private=true&access_token=${GH_TOKEN}&cache_bust=${TIMESTAMP}&langs_count=7&langs_list=${LANGS_LIST}" -o assets/top-langs.svg

      # -----------------------------------------------
      # 3. بطاقة Streak
      # -----------------------------------------------
      - name: Download Streak
        run: |
          curl -sS -f "https://github-readme-streak-stats.herokuapp.com/?user=renqwee&theme=dark" -o assets/streak.svg

      # -----------------------------------------------
      # 4. Commit and Push
      # -----------------------------------------------
      - name: Commit and push images
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          
          git add assets/*.svg
          
          if ! git diff --staged --quiet; then
            git commit -m "chore: update GitHub stats SVGs [skip ci]"
            git push
          else
            echo "No changes detected. Skipping commit and push."
          fi
